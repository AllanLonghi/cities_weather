{"version":3,"sources":["Components/City/CitiesList.js","ApiConn/WeatherApiConn.js","Components/City/CityForm.js","ApiConn/CityApi.js","Components/City/CityBox.js","Components/Weather/WeatherCard.js","App.js","serviceWorker.js","index.js"],"names":["CitiesList","react_default","a","createElement","id","this","props","cities","map","city","key","Id","Name","CountryCode","react_router_dom","to","pathname","state","React","Component","appid","GetWeatherDelegateResult","callBackSuccess","callBackFail","$","ajax","url","method","dataType","data","q","units","success","result","error","err","CityForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Error","onSubmit","bind","assertThisInitialized","callBackValidationFail","callBackValidationSuccess","callBackCitySubmitFail","e","preventDefault","setState","callBackCitySubmit","contentType","JSON","stringify","responseJSON","message","_this2","htmlFor","type","name","value","onChange","target","placeholder","className","CityBox","CallBackCitySubmit","CallBackSubmitError","CityForm_CityForm","CitiesList_CitiesList","WeatherModal","Message","cod","componentDidMount","location","weather","GetWeatherPerDay","forceUpdate","date","Date","dia","getDate","mes","getMonth","ano","getFullYear","console","log","group","list","element","eDate","dt_txt","getDay","string","charAt","toUpperCase","slice","align","country","day","dt","FormatDate","main","temp_max","temp_min","capitalizeFirstLetter","description","wind","speed","withRouter","App","react_router","path","exact","component","CityBox_CityBox","render","WeatherCard","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b591253f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CitiesList.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class CitiesList extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <table id='cities'>\r\n                <thead>\r\n                    <tr>\r\n                    <th>Cidade</th>\r\n                    <th>Código do Pais</th>\r\n                    <th>Tempo</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                    this.props.cities.map(function(city){\r\n                    return (\r\n                        <tr key={city.Id}>\r\n                            <td>{city.Name}</td>\r\n                            <td>{city.CountryCode}</td>\r\n                            <td>\r\n                            <Link to={{\r\n                                pathname: '/weather',\r\n                                state: {\r\n                                    Name:city.Name,\r\n                                    CountryCode:city.CountryCode\r\n                                }\r\n                                }}>Previsão\r\n                            </Link>\r\n                            </td>\r\n                        </tr>\r\n                        );\r\n                    })\r\n                    }\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","import $ from 'jquery'\r\n\r\nvar appid = 'cb5ee795dd586d31a90c93f8fcfd8f56';\r\n\r\nexport function GetWeatherDelegateResult(city,callBackSuccess,callBackFail){\r\n    $.ajax({\r\n        url: \"https://api.openweathermap.org/data/2.5/forecast\",\r\n        method: 'GET',\r\n        dataType: 'json',\r\n        data: {q:city.Name + ',' + city.CountryCode,units:'metric',appid:appid},\r\n        success: function(result){\r\n            callBackSuccess(result);\r\n        },\r\n        error: function(err){\r\n            callBackFail(err);\r\n        }\r\n    });\r\n}\r\n\r\nexport function GetWeather(city){\r\n    $.ajax({\r\n        url: \"https://api.openweathermap.org/data/2.5/forecast\",\r\n        method: 'GET',\r\n        dataType: 'json',\r\n        data: {q:city.Name + ',' + city.CountryCode,cnt:5,units:'metric',appid:appid},\r\n        success: function(result){   \r\n            return result;\r\n        }\r\n    });\r\n}","import React from 'react';\r\nimport './CityForm.css';\r\nimport {GetWeatherDelegateResult} from '../../ApiConn/WeatherApiConn';\r\nimport {SaveCityDelegateResult} from '../../ApiConn/CityApi';\r\n\r\nexport default class CityForm extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {Name:'',CountryCode:'',Error:''};\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.callBackValidationFail = this.callBackValidationFail.bind(this);\r\n        this.callBackValidationSuccess = this.callBackValidationSuccess.bind(this);\r\n        this.callBackCitySubmitFail = this.callBackCitySubmitFail.bind(this);\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();  \r\n        GetWeatherDelegateResult({Name:this.state.Name,CountryCode:this.state.CountryCode},\r\n            this.callBackValidationSuccess,\r\n            this.callBackValidationFail\r\n            );\r\n    }\r\n\r\n    callBackValidationSuccess(){\r\n        this.setState({Error:''});\r\n        SaveCityDelegateResult({Name:this.state.Name,CountryCode:this.state.CountryCode},this.props.callBackCitySubmit,this.callBackCitySubmitFail);\r\n    }\r\n\r\n    callBackCitySubmitFail(){\r\n        this.setState({Error:'Não foi possivel salvar cidade.'});\r\n    }\r\n\r\n    callBackValidationFail(err){\r\n        this.setState({Error:'Não foi possível cadastrar cidade: ' + err.responseJSON.message})\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div id='formDiv'>\r\n                <form onSubmit={this.onSubmit} method=\"post\">\r\n                    <label htmlFor=\"Name\">Cidade</label> \r\n                    <input type=\"text\" id=\"Name\" name=\"Name\" value={this.state.Name} onChange={(e) => this.setState({Name:e.target.value})}/>\r\n                    <label htmlFor=\"CountryCode\">Código ISO do Pais</label> \r\n                    <input placeholder=\"ex: BRA ou BR\" type=\"text\" id=\"CountryCode\" name=\"CountryCode\" value={this.state.CountryCode} onChange={(e) => this.setState({CountryCode:e.target.value})}/>\r\n                    <span></span>\r\n                    <button type='submit'>Salvar</button>\r\n                    <br/>\r\n                    <span className=\"err\"> {this.state.Error} </span>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import $ from 'jquery'\r\n\r\nexport function SaveCityDelegateResult(city,callBackSuccess,callBackFail){\r\n    $.ajax({\r\n        url: \"http://localhost:49985/api/Cities\",\r\n        contentType: 'application/json',\r\n        method: 'POST',\r\n        dataType: 'json',\r\n        data:JSON.stringify({Name:city.Name,CountryCode:city.CountryCode}),\r\n        success: function(result){\r\n            callBackSuccess(result);\r\n        },\r\n        error: function(err){\r\n            callBackFail(err);\r\n        }\r\n    });\r\n}\r\n\r\nexport function GetCitiesDelegateResult(callBackSuccess,callBackFail){\r\n    $.ajax({\r\n        url: \"http://localhost:49985/api/Cities\",\r\n        contentType: 'application/json',\r\n        method: 'GET',\r\n        dataType: 'json',\r\n        success: function(result){\r\n            callBackSuccess(result);\r\n        },\r\n        error: function(err){\r\n            callBackFail(err);\r\n        }\r\n    });\r\n}\r\n","import React from 'react';\r\nimport CitiesList from './CitiesList';\r\nimport CityForm from './CityForm';\r\nimport './CityBox.css';\r\nimport {GetCitiesDelegateResult} from '../../ApiConn/CityApi';\r\n\r\nexport default class CityBox extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {city:[],Error:''};\r\n        this.CallBackCitySubmit = this.CallBackCitySubmit.bind(this);\r\n        this.CallBackSubmitError = this.CallBackSubmitError.bind(this);\r\n    }\r\n\r\n    CallBackSubmitError(err){\r\n        this.setState({Error:'Sem conexão com API de cidades.'});\r\n    }\r\n\r\n    CallBackCitySubmit(result){\r\n        this.setState({city:result,Error:''});\r\n    }\r\n\r\n    componentDidMount() {\r\n        GetCitiesDelegateResult(this.CallBackCitySubmit,this.CallBackSubmitError);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CityForm callBackCitySubmit={this.CallBackCitySubmit} />\r\n                <br/>\r\n                <CitiesList cities={this.state.city}/>\r\n                <br/>\r\n                <span>{this.state.Error}</span>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {GetWeatherDelegateResult} from '../../ApiConn/WeatherApiConn';\r\nimport './WeatherCards.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass WeatherModal extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.Error = {Message:'',cod:''};\r\n        this.callBackSuccess = this.callBackSuccess.bind(this);\r\n        this.callBackFail = this.callBackFail.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n      GetWeatherDelegateResult(this.props.location.state,this.callBackSuccess,this.callBackFail);\r\n    }\r\n    \r\n    callBackSuccess(result){\r\n      this.setState({weather:this.GetWeatherPerDay(result)})\r\n    }\r\n\r\n    callBackFail(error){\r\n      this.Error = error.responseJSON;\r\n      this.forceUpdate();\r\n    }\r\n\r\n    FormatDate(date){\r\n      var data= new Date(date)\r\n      var dia=data.getDate();\r\n      var mes=data.getMonth() + 1;\r\n      var ano=data.getFullYear();\r\n      if(mes < '10'){\r\n        mes = '0' + mes; \r\n      }\r\n      console.log(mes);\r\n      return  dia + '/' + mes + '/' + ano;\r\n    }\r\n\r\n    GetWeatherPerDay(weather){\r\n      var group = [];\r\n      weather.list.map(function(element) {\r\n        var eDate = new Date(element.dt_txt).getDay();\r\n        if(!group[eDate]){\r\n          group[eDate] = element;\r\n        }   \r\n      });\r\n      return {list:group,city:weather.city};\r\n    }\r\n\r\n    capitalizeFirstLetter(string) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n  render() {\r\n      if (this.state) {\r\n        return (\r\n          <div align=\"center\">\r\n          <br/>\r\n          <span className=\"cityName\">{this.state.weather.city.name} - {this.state.weather.city.country} </span>\r\n          <br/>\r\n          <br/>\r\n          <div className=\"row\">\r\n            {\r\n                this.state.weather.list.map(function(day){\r\n                  return(\r\n                  <div className=\"column\" key={day.dt}>\r\n                      <div className=\"card\">\r\n                        <span className=\"date\">{this.FormatDate(day.dt_txt)}</span>\r\n                        <span className=\"temp_max\">Max: {day.main.temp_max}&deg;</span>\r\n                        <span className=\"temp_min\">Min: {day.main.temp_min}&deg;</span>\r\n                        <span className=\"conditions\">{this.capitalizeFirstLetter(day.weather[0].description)}</span>\r\n                        <span className=\"wind\">Vento: {day.wind.speed} KMH</span>\r\n                      </div>\r\n                  </div>\r\n                  );\r\n                }.bind(this))\r\n              }\r\n          </div>\r\n          </div>\r\n        );\r\n    }else{\r\n      if(!this.Error.message){\r\n        return(<div><span className=\"cityName\">Carregando dados</span></div>);\r\n      }else{\r\n        return(<div><span className=\"cityName\">Não foi possível carregar dados: {this.Error.message}</span></div>);\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default withRouter(WeatherModal)","import React from 'react';\r\nimport CityBox from './Components/City/CityBox';\r\nimport WeatherModal from './Components/Weather/WeatherCard'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component{\r\n  render(){\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className=\"topnav\">\r\n            <Link className=\"linkNav \"to=\"/\">Home</Link>\r\n          </div>\r\n          <br/>\r\n          <header className=\"App-header\">\r\n            <Route path=\"/\" exact component={() => <CityBox/>} />\r\n            <Route path=\"/weather\" render={() => <WeatherModal {...this.props} />} />\r\n          </header>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}